{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/books/add-book/add-book.component.css","webpack:///./src/app/books/add-book/add-book.component.html","webpack:///./src/app/books/add-book/add-book.component.ts","webpack:///./src/app/books/edit-book/edit-book.component.css","webpack:///./src/app/books/edit-book/edit-book.component.html","webpack:///./src/app/books/edit-book/edit-book.component.ts","webpack:///./src/app/books/list/list.component.css","webpack:///./src/app/books/list/list.component.html","webpack:///./src/app/books/list/list.component.ts","webpack:///./src/app/categories/add-categorie/add-categorie.component.css","webpack:///./src/app/categories/add-categorie/add-categorie.component.html","webpack:///./src/app/categories/add-categorie/add-categorie.component.ts","webpack:///./src/app/categories/list-categories/list-categories.component.css","webpack:///./src/app/categories/list-categories/list-categories.component.html","webpack:///./src/app/categories/list-categories/list-categories.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/books.service.ts","webpack:///./src/app/services/categories.service.ts","webpack:///./src/app/sign-in/sign-in.component.css","webpack:///./src/app/sign-in/sign-in.component.html","webpack:///./src/app/sign-in/sign-in.component.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".example-fill-remaining-space {\\n    /* This fills the remaining space, by using flexbox. \\n    Every toolbar row uses a flexbox row layout. */\\n    -webkit-box-flex: 1;\\n            flex: 1 1 auto;\\n}\\n\\na, a:visited {\\n    color: #fff;\\n    text-decoration: none;\\n}\\n\\na:hover {\\n    color: #424242;\\n    cursor: pointer;\\n}\\n\\n.container {\\n    margin: 10px;\\n}\\n\\n.margin-right {\\n    margin-right: 10px;\\n}\\n\\n.mat-toolbar-row div a {    \\n    font-weight: lighter;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtrREFDOEM7SUFDOUMsbUJBQWM7WUFBZCxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksV0FBVztJQUNYLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxlQUFlO0FBQ25COztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFDQTtJQUNJLG9CQUFvQjtBQUN4QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZmlsbC1yZW1haW5pbmctc3BhY2Uge1xuICAgIC8qIFRoaXMgZmlsbHMgdGhlIHJlbWFpbmluZyBzcGFjZSwgYnkgdXNpbmcgZmxleGJveC4gXG4gICAgRXZlcnkgdG9vbGJhciByb3cgdXNlcyBhIGZsZXhib3ggcm93IGxheW91dC4gKi9cbiAgICBmbGV4OiAxIDEgYXV0bztcbn1cblxuYSwgYTp2aXNpdGVkIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmE6aG92ZXIge1xuICAgIGNvbG9yOiAjNDI0MjQyO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmNvbnRhaW5lciB7XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4ubWFyZ2luLXJpZ2h0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG4ubWF0LXRvb2xiYXItcm93IGRpdiBhIHsgICAgXG4gICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7XG59Il19 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n        <span>Books Project</span>\\n        <span class=\\\"example-fill-remaining-space\\\"></span>\\n        <div *ngIf=\\\"!jwtToken.token\\\">\\n            <a class=\\\"margin-right\\\" routerLink=\\\"signIn\\\">Connexion</a>\\n            <a class=\\\"margin-right\\\" routerLink=\\\"signUp\\\">Inscription</a>\\n        </div>\\n        <div *ngIf=\\\"jwtToken.token\\\">\\n            <a class=\\\"margin-right\\\" routerLink=\\\"categories\\\">Catégories</a>\\n            <a class=\\\"margin-right\\\" routerLink=\\\"books\\\">Livres</a>\\n            <a (click)=\\\"logout()\\\">Déconnexion</a>\\n        </div>  \\n    </mat-toolbar-row>\\n</mat-toolbar>\\n\\n\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { Token } from './models/token.model';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from './services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  jwtToken : Token;\n  subscription : Subscription;\n  title = 'Client';\n  \n  constructor(private authService: AuthService,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.subscription = this.authService.jwtToken.subscribe((jwtToken) => {\n      this.jwtToken = jwtToken\n    })\n  }\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['signIn']);      \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { AppComponent } from './app.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { AddBookComponent } from './books/add-book/add-book.component';\nimport { ListComponent } from './books/list/list.component';\nimport { EditBookComponent } from './books/edit-book/edit-book.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { AuthService } from './services/auth.service';\nimport { BooksService } from './services/books.service';\nimport { ApiService } from './services/api.service';\nimport { AddCategorieComponent } from './categories/add-categorie/add-categorie.component';\nimport { ListCategoriesComponent } from './categories/list-categories/list-categories.component';\nimport { CategoriesService } from './services/categories.service';\n\nconst routes: Routes = [\n    {path :'signIn', component : SignInComponent},\n    {path :'signUp', component : SignUpComponent},\n    {path :'addBook', canActivate : [AuthGuard], component : AddBookComponent},\n    {path :'books', canActivate : [AuthGuard], component : ListComponent},\n    {path :'editBook/:id', canActivate : [AuthGuard], component : EditBookComponent},\n    {path :'categories', canActivate : [AuthGuard], component : ListCategoriesComponent},\n    {path :'addCategory', canActivate : [AuthGuard], component : AddCategorieComponent},  \n    {path : '' , component : SignInComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignInComponent,\n    AddBookComponent,\n    ListComponent,\n    EditBookComponent,\n    SignUpComponent,\n    AddCategorieComponent,\n    ListCategoriesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule\n  ],\n  providers: [AuthGuard, AuthService, BooksService, ApiService, CategoriesService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tzL2FkZC1ib29rL2FkZC1ib29rLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Ajouter un livre</h1>   \\n\\n<mat-card>\\n  <form [formGroup]=\\\"addBookForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"example-form\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">        \\n      <div class=\\\"error\\\" *ngIf=\\\"error_message != '' \\\">{{ error_message }}</div>\\n      <input matInput type=\\\"text\\\" formControlName=\\\"title\\\" placeholder=\\\"Titre de votre livre\\\">\\n    </mat-form-field>\\n    \\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <textarea matInput  type=\\\"text\\\" formControlName=\\\"resume\\\" placeholder=\\\"Résumé de votre livre\\\"></textarea>\\n    </mat-form-field>\\n    \\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"number\\\" formControlName=\\\"note\\\" placeholder=\\\"note /10\\\">\\n    </mat-form-field>\\n    \\n    <div formArrayName=\\\"categories\\\">\\n        <div  *ngFor=\\\"let categorieControl of getCategories().controls; let i = index\\\">\\n        <mat-form-field>\\n            <mat-label>categorie</mat-label>\\n            <select matNativeControl [formControlName]=\\\"i\\\" >\\n            <option *ngFor=\\\"let categorie of categories\\\" [value]=\\\"categorie.label\\\" >{{categorie.label}}</option>\\n            </select>\\n        </mat-form-field>\\n        </div>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"  (click)=\\\"onAddCategory()\\\">Ajouter Catégorie</button>\\n    </div>\\n    <br>\\n    <button [disabled]=\\\"addBookForm.invalid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Ajouter le livre</button>\\n    \\n  </form>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BooksService } from 'src/app/services/books.service';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Book } from '../../models/book.model'\nimport { Router } from '@angular/router';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.css']\n})\nexport class AddBookComponent implements OnInit {\n  \n  book: Book;\n  error: number;\n  error_message: string = \"\";\n  addBookForm: FormGroup;\n\n  categories: Observable<any[]>;\n\n  constructor(private booksService: BooksService,\n    private formBuilder : FormBuilder,\n    private router: Router,\n    private categoriesService: CategoriesService) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.addBookForm = this.formBuilder.group({\n      title : ['', [Validators.required ]],\n      resume : ['' , [Validators.required ]],\n      categories : this.formBuilder.array([]),\n      note : ['' ,[ Validators.required , Validators.pattern('^([0-9]\\d*)(?:\\.[5]?)?$')]],\n    });\n    this.getAllCategories();\n    this.onAddCategory();\n  }\n\n  getCategories(): FormArray {\n    return this.addBookForm.get('categories') as FormArray;\n  }\n\n  getAllCategories() {\n    return this.categoriesService.getCategories().subscribe(\n      (res) => {\n        this.categories = res;\n      }\n    );\n  }\n\n  onAddCategory() {\n    const newCategoryControl = this.formBuilder.control(null, Validators.required);\n    this.getCategories().push(newCategoryControl);\n  }\n\n  onSubmit() {    \n    let myForm = this.addBookForm;\n    this.book = {\n      title : myForm.get('title').value ,\n      resume : myForm.get('resume').value,\n      categories: myForm.get('categories').value,\n      note :  myForm.get('note').value,\n      userId : localStorage.getItem('id')\n    };\n\n    // console.log(\"new : \", this.book);\n\n    this.booksService.addBook(this.book).subscribe(\n      (res) => {\n        this.router.navigate(['books']);\n      }, (err) => {\n        if(err.error.ErrorCode == 11000) {\n            this.error_message = \"Ce titre est déjà pris, veuillez en mettre un autre.\";\n        }\n      }\n    );    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tzL2VkaXQtYm9vay9lZGl0LWJvb2suY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Editer un livre</h1>   \\n\\n<mat-card *ngIf=\\\"isLoaded\\\">\\n    <form [formGroup]=\\\"editBookForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"example-form\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <div class=\\\"error\\\" *ngIf=\\\"error_message != '' \\\">{{ error_message }}</div>\\n            <input matInput type=\\\"text\\\" formControlName=\\\"title\\\" placeholder=\\\"Titre de votre livre\\\" value=\\\"{{ oldBook.title }}\\\">\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <textarea matInput  type=\\\"text\\\" formControlName=\\\"resume\\\" placeholder=\\\"Résumé de votre livre\\\" value=\\\"{{ oldBook.resume }}\\\"></textarea>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"number\\\" formControlName=\\\"note\\\" placeholder=\\\"note sur 10\\\" value=\\\"{{ oldBook.note }}\\\">\\n        </mat-form-field>\\n        \\n        <div formArrayName=\\\"categories\\\">\\n            <div  *ngFor=\\\"let categorieControl of getCategories().controls; let i = index\\\">\\n                <mat-form-field>\\n                    <mat-label>categorie</mat-label>\\n                    <select matNativeControl [formControlName]=\\\"i\\\" >\\n                        <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.label\\\" >{{ category.label }}</option>\\n                    </select>\\n                </mat-form-field>\\n            </div>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"  (click)=\\\"onAddCategory()\\\">Ajouter Catégorie</button>\\n        </div>\\n        <br>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Editer le livre</button>\\n        \\n    </form>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Book } from 'src/app/models/book.model';\nimport { BooksService } from 'src/app/services/books.service';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styleUrls: ['./edit-book.component.css']\n})\nexport class EditBookComponent implements OnInit {\n\n\toldBook: Book;\n\tbook: Book;\n\tbookId: string;\n\teditBookForm : FormGroup;\n    isLoaded: boolean = false;\n    categories: Observable<any[]>;\n    error_message: string = \"\";\n\n\tconstructor(private router: Router,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate formBuilder : FormBuilder,\n        private booksService: BooksService,\n        private categoriesService: CategoriesService) { }\n\n    ngOnInit() {\n        this.bookId = this.route.snapshot.params['id'];\n\t\t\n\t\tthis.booksService.getbook(this.bookId).subscribe(\n\t\t\t(res) => {\n\t\t\t\tthis.oldBook = res;\n                this.isLoaded = true;  \n                this.initForm();\n                this.editBookForm.setControl('categories', this.formBuilder.array(res.categories || []));\n\t\t\t}\n        );       \n    }\n\t\n\tinitForm() {\n        this.editBookForm = this.formBuilder.group({\n            title : [this.oldBook.title, [Validators.required ]],\n            resume : [this.oldBook.resume , [Validators.required ]],\n            categories : this.formBuilder.array([]),\n            note : [this.oldBook.note ,[ Validators.required , Validators.pattern('^([0-9]\\d*)(?:\\.[5]?)?$')]],\n        });\n        this.getAllCategories();\n        this.onAddCategory();\n    }\n\n    getCategories(): FormArray {\n        return this.editBookForm.get('categories') as FormArray;\n    }\n\n    getAllCategories() {\n        return this.categoriesService.getCategories().subscribe(\n          (res) => {\n            this.categories = res;\n          }\n        );\n    }\n    \n    onAddCategory() {\n        const newCategoryControl = this.formBuilder.control(null, Validators.required);\n        this.getCategories().push(newCategoryControl);\n    }\n\t\n\tonSubmit() {    \n        let myForm = this.editBookForm;\n        this.book = {\n            title : myForm.get('title').value ,\n            resume : myForm.get('resume').value,\n            categories: myForm.get('categories').value,\n            note :  myForm.get('note').value,\n            userId : localStorage.getItem('id')\n        };\n\n    this.booksService.editBook(this.bookId, this.book).subscribe(\n      (res) => {\n        this.router.navigate(['books']);\n      }, (err) => {\n        console.log(err);\n        if(err.error.ErrorCode == 11000) {\n            this.error_message = \"Ce titre est déjà pris, veuillez en mettre un autre.\";\n        }\n      }\n    )    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tzL2xpc3QvbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table\\\">\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">Titre</th>\\n            <th scope=\\\"col\\\">categorie</th>\\n            <th scope=\\\"col\\\">Note</th>\\n            <th scope='col'>Resumé</th>\\n            <th scope='col'>Editer</th>\\n            <th scope='col'>Supprimer</th>\\n            <th scope='col'>Partager</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let book of books\\\">\\n            <td>{{ book.title }}</td>\\n            <td> {{ book.categories }}</td>\\n            <td>{{ book.note }}</td>\\n            <td>{{ book.resume }}</td>\\n            <td><button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"  (click)=\\\"edit(book._id)\\\">Editer</button></td>\\n            <td><button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"  (click)=\\\"remove(book._id)\\\">Supprimer</button></td>\\n            <td><button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"  (click)=\\\"share(book)\\\">Partager</button></td>\\n        </tr>\\n    </tbody>\\n</table>\\n<br>\\n\\n<div mat-dialog-content *ngIf=\\\"shareClick\\\">\\n    <mat-card>\\n        <form (ngSubmit)=\\\"onSubmitShare(f)\\\" #f=\\\"ngForm\\\">\\n            <mat-form-field class=\\\"example-full-width\\\">                \\n                <input matInput ngModel [email]=\\\"true\\\" type='email' name='email' required placeholder=\\\"Adresse mail de votre ami(e) :\\\">\\n            </mat-form-field>\\n            <button [disabled]=\\\"f.invalid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Envoyer</button>\\n        </form>\\n    </mat-card><br>\\n</div>\\n\\n<a routerLink=\\\"/addBook\\\"><button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" >Ajouter un livre</button></a>\"","import { Component, OnInit } from '@angular/core';\nimport { BooksService } from 'src/app/services/books.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  books : Observable<any[]>\n  shareClick: boolean = false;\n  book_shared: any;\n  email_shared: string;\n\n  constructor(private booksService: BooksService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.booksService.getBooks().subscribe(\n      (books) => {\n        this.books = books;\n      }\n    )\n  }\n\n  edit(bookId) {\n    this.router.navigate(['/editBook', bookId ]);\n  }\n\n  remove(bookId) {\n    this.booksService.removeBook(bookId).subscribe(\n    (res) => {\n        this.booksService.getBooks().subscribe(\n            (res) => {\n                this.books = res;\n            }\n        );\n    });\n  }\n\n  share(book) {\n      this.shareClick = true;\n      this.book_shared = book;\n  }\n  onSubmitShare(f) {\n      this.email_shared = (f.form.value['email']);\n      this.shareClick = false;      \n\n      let data_shared = {\n          book: this.book_shared,\n          email: this.email_shared\n      }\n      \n    this.booksService.shareBook(data_shared).subscribe(\n        (res) => {\n            console.log(res);\n            console.log('Envoyé à ' + data_shared.email);\n        }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvYWRkLWNhdGVnb3JpZS9hZGQtY2F0ZWdvcmllLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div  class=\\\"row align-items-center form_sign justify-content-center\\\">\\n    <div class=\\\"col-8 align-self-center\\\">\\n        \\n        <h1>Ajouter une catégorie</h1>\\n        <mat-card>\\n            <form [formGroup]=\\\"addCategoryForm\\\" (ngSubmit)=\\\"onSubmit()\\\" class=\\\"example-form\\\">\\n                <mat-form-field class=\\\"example-full-width\\\">\\n                    <div class=\\\"error\\\" *ngIf=\\\"error_message != '' \\\">{{ error_message }}</div>\\n                    <input matInput type=\\\"text\\\" formControlName=\\\"label\\\" placeholder=\\\"Nom catégorie\\\">\\n                </mat-form-field>\\n                \\n                <button [disabled]=\\\"addCategoryForm.invalid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Ajouter</button>\\n                \\n            </form>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Category } from '../../models/category.model'\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-categorie',\n  templateUrl: './add-categorie.component.html',\n  styleUrls: ['./add-categorie.component.css']\n})\nexport class AddCategorieComponent implements OnInit {\n\n  addCategoryForm : FormGroup;\n  category : Category;\n  error_message: string = '';\n\n  constructor(private formBuilder: FormBuilder,\n    private categoriesService: CategoriesService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.addCategoryForm = this.formBuilder.group({\n      label : ['', [Validators.required ]],\n    });\n  }\n\n  onSubmit() {\n    let myForm = this.addCategoryForm;\n    this.category = {\n      label : myForm.get('label').value\n    };\n\n    this.categoriesService.addCategory(this.category).subscribe(\n      (res) => {\n        this.router.navigate(['categories']);\n      }, (err) => {\n        if(err.error.ErrorCode == 11000) {\n            this.error_message = \"Ce nom est déjà pris, veuillez en mettre un autre.\";\n        }\n      }\n    );   \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvbGlzdC1jYXRlZ29yaWVzL2xpc3QtY2F0ZWdvcmllcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table\\\">\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">Catégorie</th>\\n            <th scope='col'>Supprimer</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let categorie of categories\\\">\\n            <td>{{ categorie.label }}</td>\\n            <td><button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\"  (click)=\\\"remove(categorie._id)\\\">Supprimer</button></td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<a routerLink=\\\"/addCategory\\\">\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" >Ajouter une catégorie</button>\\n</a>\"","import { Component, OnInit } from '@angular/core';\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-list-categories',\n  templateUrl: './list-categories.component.html',\n  styleUrls: ['./list-categories.component.css']\n})\nexport class ListCategoriesComponent implements OnInit {\n\n  categories: Observable<any[]>;\n\n  constructor(private categoriesService: CategoriesService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.categoriesService.getCategories().subscribe(\n      (categories) => {\n        this.categories = categories;\n      }\n    )\n  }\n\n  edit(id) {\n    this.router.navigate(['/editCategory', id ]);\n  }\n\n  remove(categoryId) {\n    this.categoriesService.removeCategory(categoryId).subscribe(\n    (res) => {\n        this.categoriesService.getCategories().subscribe(\n            (res) => {\n                this.categories = res;\n            }\n        );\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService,\n    private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      const isAuth = this.authService.jwtToken.value.token;\n      \n      if( isAuth) {\n        return true;\n      } else {\n        this.router.navigate(['signIn']);\n        return false;\n      }\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subscription, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class ApiService {\n  \n  authorization: string = \"\";\n  \n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.authorization\n    })\n  } \n\n  constructor(private http: HttpClient) { \n  }\n\n  private getHeaders(): HttpHeaders {\n    const headersParams = { 'Content-Type': 'application/json' };\n    const token = localStorage.getItem('token');\n    if (token) {\n      Object.assign(headersParams, { 'authorization': `${token}` });\n    }\n    return new HttpHeaders(headersParams);\n  }\n\n  fixHeaders() {\n    this.httpOptions.headers = this.getHeaders();\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { Token } from '../models/token.model';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  public jwtToken : BehaviorSubject<Token> = new BehaviorSubject({\n    token : null\n  });\n\n  constructor(private httpClient: HttpClient) { \n    this.initJwtToken();\n  }\n\n  private initJwtToken() {\n    const token = localStorage.getItem('token');\n        if (token) {\n        this.jwtToken.next({\n            token : token\n        });\n        } else {\n        this.jwtToken.next({\n            token : null\n        });\n        }\n    }\n\n  signIn(username: string, password: string) {\n    return this.httpClient.post('http://localhost:3000/api/auth/login', {username : username , password : password}).pipe(\n      tap( (token) => {\n        this.jwtToken.next({\n          token : token['token']\n        })\n      })\n    );\n  }\n\n  signUp(username: string, password: string) { \n    return this.httpClient.post(\n      'http://localhost:3000/api/auth/signup',\n      {username : username, password : password}\n    )\n  }\n\n  logout() {\n    this.jwtToken.next({\n      token : null\n    });\n    localStorage.removeItem('token');\n    localStorage.removeItem('id');\n    console.log(localStorage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Book } from '../models/book.model';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n\n  constructor(private httpClient: HttpClient, private apiService: ApiService) { }\n\n  addBook(newBook: any) : Observable<any> {\n    this.apiService.fixHeaders();\n    return this.httpClient.post<Book>('http://localhost:3000/api/books/add', newBook, this.apiService.httpOptions);\n  }\n\n  getBooks(): Observable<any> {\n    this.apiService.fixHeaders();\n    return this.httpClient.get(\n        'http://localhost:3000/api/books', this.apiService.httpOptions\n    );\n  }\n\n  getbook(id: string) : Observable<any> {\n    this.apiService.fixHeaders();\n    return this.httpClient.get<Book>('http://localhost:3000/api/books/' + id, this.apiService.httpOptions);\n  }\n\n  editBook(bookId, newBook) {\n    this.apiService.fixHeaders();\n    return this.httpClient.post<Book>('http://localhost:3000/api/books/edit/' + bookId, {'book':newBook, 'bookId':bookId}, this.apiService.httpOptions);\n  }\n\n  removeBook(bookId) {\n    return this.httpClient.get<Book>('http://localhost:3000/api/books/delete/' + bookId);\n  }\n\n  shareBook(book) {\n    return this.httpClient.post<Book>('http://localhost:3000/api/books/share', book);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from './api.service';\nimport { Observable } from 'rxjs';\nimport { Category } from '../models/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor(private httpClient: HttpClient,\n    private apiService: ApiService) { }\n\n  getCategories(): Observable<any> {\n    this.apiService.fixHeaders();\n    return this.httpClient.get(\n        'http://localhost:3000/api/categories', this.apiService.httpOptions\n    );\n  }\n\n  getCategory(id: string) : Observable<any> {\n    this.apiService.fixHeaders();\n    return this.httpClient.get<Category>('http://localhost:3000/api/categories/' + id, this.apiService.httpOptions);\n  }\n\n  addCategory(newCategory: any) : Observable<any> {\n    this.apiService.fixHeaders();\n    return this.httpClient.post<Category>('http://localhost:3000/api/categories/add', newCategory, this.apiService.httpOptions);\n  }\n\n  removeCategory(categoryId) {\n    return this.httpClient.get<Category>('http://localhost:3000/api/categories/delete/' + categoryId);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24taW4vc2lnbi1pbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Connexion</h1> \\n\\n<mat-card>\\n    <div class=\\\"error\\\" *ngIf=\\\"error\\\">\\n        {{ error }}\\n    </div>\\n    <form [formGroup]=\\\"signInForm\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\" class=\\\"example-form\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"username\\\" placeholder=\\\"Votre pseudo\\\" required>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Votre Mot de passe\\\" required>\\n        </mat-form-field>\\n      <button [disabled]=\\\"f.invalid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Connexion</button>\\n    </form>\\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n  signInForm : FormGroup;\n  error: string = \"\";\n\n  constructor(private formBuilder: FormBuilder, \n    private authService: AuthService,\n    private router: Router) { }\n  \n  ngOnInit() {\n    this.initForm();\n  }\n  \n  initForm(){\n    this.signInForm = this.formBuilder.group({\n      username : [''],\n      password : ['' , [Validators.required , Validators.pattern(/[0-9a-zA-Z]{6,}/)]]      \n    })     \n  }\n  \n  onSubmit() {\n    let username = this.signInForm.get('username').value;\n    let password = this.signInForm.get('password').value;\n    \n    this.authService.signIn(username, password).subscribe(\n        (res) => {\n            // console.log(res);\n            var token = res['token'];\n            var id = res['id'];\n            localStorage.setItem('token', token);\n            localStorage.setItem('id', id);\n            this.router.navigate(['books']);\n        }, (error) => {\n            // console.log(error);\n            this.error = error.error.ErrorMsg;\n        }\n    );\n  } \n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Inscription</h1> \\n\\n<mat-card>\\n    <div class=\\\"error\\\" *ngIf=\\\"error\\\">\\n        {{ error }}\\n    </div>\\n    <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\" class=\\\"example-form\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"text\\\" formControlName=\\\"username\\\" placeholder=\\\"Votre pseudo\\\" required>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Votre Mot de passe (6 caractères minimum)\\\" required>\\n        </mat-form-field>\\n        <button [disabled]=\\\"f.invalid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Connexion</button>\\n    </form>\\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  \n  signUpForm : FormGroup;\n  error: string = \"\";\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm(){\n    this.signUpForm = this.formBuilder.group({\n      username : [''],\n      password : ['' , [Validators.required , Validators.pattern(/[0-9a-zA-Z]{6,}/)]]      \n    })     \n  }\n\n  onSubmit() {\n    // console.log(f);\n    let username = this.signUpForm.get('username').value;    \n    let password = this.signUpForm.get('password').value;\n\n    console.log(password);\n    \n    this.authService.signUp(username, password).subscribe(\n        (res) => {\n          console.log(res);\n          // var token = res['token'];\n          // localStorage.setItem('token', token);\n          this.router.navigate(['signIn']);\n        }, (err) => {\n          console.log(err);\n          if(err.error.ErrorCode == 11000) {\n            this.error = \"Ce pseudo est déjà pris, veuillez en choisir un autre.\";\n          }\n        }\n    );\n  } \n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}